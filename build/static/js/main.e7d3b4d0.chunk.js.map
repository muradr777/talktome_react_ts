{"version":3,"sources":["context.ts","components/Quote.tsx","components/ControlBtn.tsx","components/Header.tsx","components/LangsOverlay.tsx","components/Footer.tsx","components/Player.tsx","components/UseHeadphones.tsx","components/MotivateBtn.tsx","components/Preloader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LangContext","React","createContext","lang","setLang","defaultData","console","warn","TranslationContext","translation","setTranslation","Quote","isActive","active","content","className","map","item","key","ControlBtn","buttonId","handleClick","status","btnClass","icoClass","id","onClick","type","Header","src","alt","LangsOverlay","useState","overlayClass","setOverlayClass","useContext","useEffect","Footer","langsVisibility","setLangVisibility","setTimeout","Player","playerState","height","width","playerVars","start","loop","opts","player","setPlayer","playVideo","unMute","mute","videoId","onReady","e","target","UseHeadphones","data-lang","undefined","headphones_recommended","MotivateBtn","loading","getClassMotivate","motivate_me","Preloader","getClassLoading","hidden","App","muted","setMuted","showAnswer","setShowAnswer","playing","setPlayingState","currentQuote","setCurrentQuote","en","ru","quotes","quotesArray","length","max","Math","floor","random","timeout1","time","i","clearTimeout","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7d3b4d0.chunk.js","sourcesContent":["import React from 'react';\n\n\n// Langs\n\nexport const defaultData: string = '';\n\nexport type LangContextType = {\n    lang: string;\n    setLang: (dataType: string) => void;\n} \n\nexport const LangContext = React.createContext<LangContextType>({\n    lang: defaultData, \n    setLang: (defaultData: string) => console.warn('No data provided!')\n});\n\n\n// Translations\n\nexport const defaultTranslation: any = [{}];\n\nexport type TranslationContextType = {\n    translation: any;\n    setTranslation: (dataType: any) => void;\n} \n\nexport const TranslationContext = React.createContext<TranslationContextType>({\n    translation: defaultData, \n    setTranslation: (defaultData: any) => console.warn('No data provided!')});\n\n\n\n\n","export default function Quote({ active, content }: any) {\n  if (typeof active !== \"boolean\") {\n    console.warn(\"Something went wrong! Var active is \" + active);\n    active = false;\n  }\n\n  function getClassName(isActive: boolean) {\n    return isActive ? \"quote-wrap active\" : \"quote-wrap\";\n  }\n\n  return (\n    <div className={getClassName(active)}>\n      <div className=\"quote-slider\">\n        {content.map((item: any, key: any) => {\n          return (\n            <span key={key} className=\"quote-item\">\n              {item}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","export default function ControlBtn({ buttonId, handleClick, status }: any) {\n  let btnClass = \"controlWrap \",\n    icoClass = \"fas fa-volume-\";\n  if (buttonId === \"mute\") {\n    btnClass += \"mRight\";\n    icoClass += \"mute\";\n  } else {\n    btnClass += \"mLeft\";\n    icoClass += \"up\";\n  }\n\n  if (typeof status === \"boolean\" && status) btnClass += \" active\";\n\n  return (\n    <button\n      id={buttonId}\n      onClick={handleClick}\n      type=\"button\"\n      className={btnClass}\n    >\n      <i className={icoClass}></i>\n    </button>\n  );\n}\n","export default function Header() {\n  return (\n    <header className=\"Header\">\n      <div className=\"header-wrap\">\n        <div className=\"logo-text\">\n          <img src=\"parrot.svg\" alt=\"logo\" />\n          Talk<span>To</span>Me<small>Beta</small>\n        </div>\n      </div>\n    </header>\n  );\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport { LangContext } from \"../context\";\n\nfunction LangsOverlay() {\n  const [overlayClass, setOverlayClass] = useState<string>(\"lang-overlay\");\n  const { lang, setLang } = useContext(LangContext);\n\n  useEffect(() => {\n    if (lang !== \"\") setOverlayClass(\"lang-overlay hide\");\n  }, [lang]);\n  return (\n    <div className={overlayClass}>\n      <div className=\"langs-wrap\">\n        <h3 className=\"lang-title\">Select Language</h3>\n        <button\n          type=\"button\"\n          onClick={() => setLang(\"en\")}\n          className=\"langs-btn\"\n        >\n          en\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLang(\"ru\")}\n          className=\"langs-btn\"\n        >\n          ru\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default LangsOverlay;\n","import { useState, useEffect, useContext } from \"react\";\nimport { LangContext } from \"../context\";\nimport LangsOverlay from \"./LangsOverlay\";\n\nexport default function Footer() {\n  const [langsVisibility, setLangVisibility] = useState<boolean>(true);\n  const { lang } = useContext(LangContext);\n  useEffect(() => {\n    let timeout: any;\n    if (lang !== \"\") {\n      timeout = setTimeout(() => {\n        setLangVisibility(false);\n      }, 1000);\n    }\n  }, [lang]);\n\n  function removeLangsOverlay() {}\n\n  return (\n    <footer className=\"Footer\">\n      <div className=\"copyrights\">\n        <span>Murad Rustamov © 2020</span>\n      </div>\n      {langsVisibility ? <LangsOverlay /> : \"\"}\n    </footer>\n  );\n}\n","import Youtube from \"react-youtube\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Player({ playerState }: any) {\n  const [opts] = useState<Object>({\n    height: \"390\",\n    width: \"640\",\n    playerVars: {\n      start: 45,\n      loop: 1,\n    },\n  });\n  const [player, setPlayer] = useState<any>(null);\n\n  const onReady = (e: any) => {\n    setPlayer(e.target);\n  };\n\n  useEffect(() => {\n    if (player !== null) {\n      if (playerState) {\n        player.playVideo();\n        player.unMute();\n      } else {\n        player.mute();\n      }\n    }\n  }, [player, playerState]);\n\n  return <Youtube videoId=\"L786lbUnZIY\" opts={opts} onReady={onReady} />;\n}\n","import { useContext } from \"react\";\nimport { LangContext, TranslationContext } from \"../context\";\n\nexport default function UseHeadphones() {\n  const { lang } = useContext(LangContext);\n  const { translation } = useContext(TranslationContext);\n\n  return (\n    <span className=\"user-headset\">\n      <span className=\"lang-text\" data-lang=\"headphones_recommended\">\n        {translation[lang] !== undefined\n          ? translation[lang].headphones_recommended\n          : \"Headphones recommended\"}{\" \"}\n        &nbsp;\n      </span>\n      <i className=\"fas fa-headphones\"></i>\n    </span>\n  );\n}\n","import { useContext, useEffect } from \"react\";\nimport { LangContext, TranslationContext } from \"../context\";\n\nexport default function MotivateBtn({ handleClick, loading }: any) {\n  const { lang } = useContext(LangContext);\n  const { translation } = useContext(TranslationContext);\n\n  function getClassMotivate(loading: boolean) {\n    return loading ? \"motivate-btn hidden\" : \"motivate-btn\";\n  }\n\n  useEffect(() => {\n    if (translation !== undefined) {\n    }\n  });\n\n  return (\n    <button\n      id=\"#motivate\"\n      type=\"button\"\n      onClick={handleClick}\n      className={getClassMotivate(loading)}\n    >\n      {translation[lang] !== undefined\n        ? translation[lang].motivate_me\n        : \"Motivate Me\"}\n    </button>\n  );\n}\n","export default function Preloader({ loading }: any) {\n  function getClassLoading(loading: boolean) {\n    return loading ? \"loading active\" : \"loading\";\n  }\n\n  return (\n    <div className={getClassLoading(loading)}>\n      <div className=\"gooey\">\n        <span className=\"credits\" hidden>\n          Credit: https://dribbble.com/shots/5092176-Newton-Loader\n        </span>\n        <span className=\"dot\"></span>\n        <div className=\"dots\">\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport \"./sass/style.sass\";\n\n// Context\nimport { TranslationContext, LangContext } from \"./context\";\n\n// Alphabetic sorted\nimport Quote from \"./components/Quote\";\nimport ControlBtn from \"./components/ControlBtn\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Player from \"./components/Player\";\nimport UseHeadphones from \"./components/UseHeadphones\";\nimport MotivateBtn from \"./components/MotivateBtn\";\nimport Preloader from \"./components/Preloader\";\n\nexport default function App() {\n  const [lang, setLang] = useState<string>(\"\");\n  const [muted, setMuted] = useState<boolean>(false);\n  const [showAnswer, setShowAnswer] = useState<boolean>(false);\n  const [playing, setPlayingState] = useState<boolean>(false);\n  const [currentQuote, setCurrentQuote] = useState<any>([]);\n\n  const [translation, setTranslation] = useState<any>({\n    en: {\n      motivate_me: \"Motivate Me\",\n      headphones_recommended: \"Headphones recommended\",\n    },\n    ru: {\n      motivate_me: \"Мотивируй меня\",\n      headphones_recommended: \"Рекомендуем надеть наушники\",\n    },\n  });\n\n  const [quotes] = useState<any>({\n    ru: [\n      [\n        \"Вместо того, чтобы сетовать, что роза имеет шипы,\",\n        \"я радуюсь тому, что среди шипов растет роза.\",\n      ],\n      [\n        \"Одной лишь мотивации недостаточно.\",\n        \"Если взять идиота и мотивировать его, получится мотивированный идиот.\",\n      ],\n      [\n        \"Никогда не недооценивайте себя.\",\n        \"Все то, что делают другие, можете делать и вы.\",\n      ],\n      [\"Инвестиции в знания дают самые высокие дивиденды.\"],\n      [\n        \"Каждая мечта тебе дается вместе с силами,\",\n        \"необходимыми для ее осуществления.\",\n      ],\n      [\"Лучше зажечь одну свечу,\", \"чем проклинать темноту.\"],\n      [\"Есть только один способ проделать большую работу - \", \"полюбить ее!\"],\n      [\"Кораблю безопасней в порту,\", \"но он не для этого строился.\"],\n      [\n        \"Воин не отказывается от того, что любит,\",\n        \"он находит любовь в том, что делает.\",\n      ],\n      [\"Неудача – это просто возможность начать снова,\", \"но уже более мудро.\"],\n      [\n        \"Логика может привести вас от пункта А к пункту Б,\",\n        \"а воображение – куда угодно.\",\n      ],\n      [\n        \"Что бы ты ни придумал, всегда найдется тот, кто уже делал это до тебя.\",\n        \"Так что главное – сделать это лучше. \",\n      ],\n      [\n        \"Ты не можешь ни выйграть, ни проиграть до тех пор,\",\n        \"пока ты не участвуешь в гонках.\",\n      ],\n      [\"На любые события в своей жизни смотри оптимистично.\"],\n      [\"Если чего-то много,\", \"ни для кого это не ценно.\"],\n      [\"Всё самое лучшее случается неожиданно.\"],\n      [\n        \"Если вы не готовы рискнуть обычным\",\n        \"вам придется довольствоваться заурядным.\",\n      ],\n      [\"Не ноша тянет вас вниз\", \"а то, как вы ее несете.\"],\n      [\n        \"Люди забудут, что вы говорили\",\n        \"люди забудут, что вы делали\",\n        \"но люди никогда не забудут,\",\n        \"какие чувства вы у них вызвали.\",\n      ],\n      [\"Прыгай\", \"и сеть появится.\"],\n      [\"Важно не то, сбили ли тебя с ног\", \"важно то, поднялся ли ты снова.\"],\n      [\"Чтобы выиграть\", \"вы должны поверить, что вы этого достойны\"],\n      [\n        \"Если вы работаете над тем, что для вас действительно важно\",\n        \"вас не приходится подгонять\",\n        \"вас тянет вперед ваша мечта.\",\n      ],\n      [\n        \"Лучше осмелиться на неудачную попытку\",\n        \"чем жить в серых сумерках\",\n        \"где нет ни побед, ни поражений.\",\n      ],\n      [\n        \"Я не могу изменить направление ветра\",\n        \"но могу развернуть паруса так\",\n        \"что всегда доберусь туда, куда мне нужно.\",\n      ],\n    ],\n    en: [\n      [\"Act as if what you do makes a difference.\", \"It does.\"],\n      [\n        \"Success is not final, failure is not fatal:\",\n        \"it is the courage to continue that counts.\",\n      ],\n      [\"Keep your eyes on the stars\", \"and your feet on the ground.\"],\n      [\"Believe you can\", \"and you're halfway there\"],\n      [\"When you have a dream,\", \"you've got to grab it and never let go.\"],\n      [\n        \"No matter what you're going through,\",\n        \"there's a light at the end of the tunnel.\",\n      ],\n      [\n        \"Life is like riding a bicycle.\",\n        \"To keep your balance, you must keep moving.\",\n      ],\n      [\"Try to be a rainbow in someone else's cloud.\"],\n      [\n        \"Sometimes you will never know the value of a moment,\",\n        \"until it becomes a memory.\",\n      ],\n      [\"You get what you give.\"],\n      [\n        \"Some people look for a beautiful place.\",\n        \"Others make a place beautiful.\",\n      ],\n      [\"Keep your face to the sunshine\", \"and you cannot see a shadow.\"],\n      [\"Stay calm\", \"Take a deep breath\", \"Everithing is possible.\"],\n      [\n        \"All our dreams can come true\",\n        \"If we have the courage to pursue them.\",\n      ],\n      [\n        \"You’ve gotta dance like there’s nobody watching\",\n        \"Love like you’ll never be hurt\",\n        \"Sing like there’s nobody listening\",\n        \"and live like it’s heaven on earth.\",\n      ],\n      [\"It’s not the load that breaks you down\", \"it’s the way you carry it.\"],\n      [\"The hard days are what make you stronger.\"],\n      [\n        \"Don’t be pushed around by the fears in your mind\",\n        \"Be led by the dreams in your heart.\",\n      ],\n      [\"Keep your eyes on the stars\", \"and your feet on the ground.\"],\n      [\"If opportunity doesn’t knock\", \"build a door.\"],\n      [\n        \"The only difference\",\n        \"between ordinary and extraordinary\",\n        \"is that little extra.\",\n      ],\n      [\"If you cannot do great things\", \"do small things in a great way.\"],\n      [\"H.O.P.E.\", \"means\", \"Hold On. Pain Ends.\"],\n      [\"Don’t dream about success\", \"Get out there and work for it.\"],\n      [\"Make your fear of losing your greatest motivator.\"],\n      [\"It might not be easy\", \"but it’ll be worth it.\"],\n      [\"Don’t stop when you are tired\", \"Stop when you are done.\"],\n    ],\n  });\n\n  useEffect(() => {\n    if (lang !== \"\") {\n      let quotesArray = quotes[lang];\n      if (currentQuote.length === 0)\n        setCurrentQuote(quotesArray[getRandomInt(quotesArray.length - 1)]);\n    }\n  }, [lang, currentQuote, quotes]);\n\n  useEffect(() => {\n    let time = 4, // 2sec first delay, 4sec each next, and 2 additional for smothiness\n      timeout1: any;\n    if (showAnswer) {\n      for (let i = 1; i <= currentQuote.length; ++i) time += 4 * i;\n\n      timeout1 = setTimeout(() => {\n        setShowAnswer(false);\n        setCurrentQuote([]);\n        // TODO: settle Animation transition of quote hiding\n      }, (time + 2) * 1000);\n    }\n\n    return () => clearTimeout(timeout1);\n  }, [showAnswer, currentQuote]);\n\n  function getClassFormWrap(active: boolean) {\n    return active ? \"form-wrap active\" : \"form-wrap\";\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"wrapper\">\n        <Quote active={showAnswer} content={currentQuote} />\n        <div className={getClassFormWrap(showAnswer)}>\n          <div className=\"motivate-wrap\">\n            <LangContext.Provider value={{ lang, setLang }}>\n              <TranslationContext.Provider\n                value={{ translation, setTranslation }}\n              >\n                <MotivateBtn\n                  handleClick={() => {\n                    setShowAnswer(true);\n                    if (!playing && !muted) setPlayingState(!playing);\n                  }}\n                  loading={showAnswer}\n                />\n              </TranslationContext.Provider>\n            </LangContext.Provider>\n            <Preloader loading={showAnswer} />\n          </div>\n\n          <ControlBtn\n            handleClick={() => {\n              setPlayingState(!playing);\n              setMuted(!muted);\n            }}\n            buttonId=\"mute\"\n            status={playing}\n          />\n          <ControlBtn\n            handleClick={() => {\n              setPlayingState(!playing);\n              setMuted(!muted);\n            }}\n            buttonId=\"play\"\n            status={!playing}\n          />\n          <LangContext.Provider value={{ lang, setLang }}>\n            <TranslationContext.Provider\n              value={{ translation, setTranslation }}\n            >\n              <UseHeadphones />\n            </TranslationContext.Provider>\n          </LangContext.Provider>\n        </div>\n        <Player playerState={playing} />\n      </main>\n\n      <LangContext.Provider value={{ lang, setLang }}>\n        <Footer />\n      </LangContext.Provider>\n    </div>\n  );\n}\n\nfunction getRandomInt(max: number) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}