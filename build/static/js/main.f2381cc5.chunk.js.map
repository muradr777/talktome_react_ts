{"version":3,"sources":["components/Quote.tsx","components/ControlBtn.tsx","components/Header.tsx","components/Footer.tsx","components/Player.tsx","components/UseHeadphones.tsx","components/MotivateBtn.tsx","components/Preloader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Quote","isActive","active","content","console","warn","className","map","item","key","ControlBtn","buttonId","handleClick","status","btnClass","icoClass","id","onClick","type","Header","src","alt","Footer","Player","playerState","useState","height","width","playerVars","start","loop","opts","player","setPlayer","useEffect","playVideo","unMute","mute","videoId","onReady","e","target","UseHeadphones","data-lang","MotivateBtn","loading","getClassMotivate","Preloader","getClassLoading","hidden","App","muted","setMuted","showAnswer","setShowAnswer","playing","setPlayingState","quotes","currentQuote","setCurrentQuote","max","length","Math","floor","random","timeout1","time","i","setTimeout","clearTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2381cc5.chunk.js","sourcesContent":["export default function Quote({ active, content }: any) {\n  if (typeof active !== \"boolean\") {\n    console.warn(\"Something went wrong! Var active is \" + active);\n    active = false;\n  }\n\n  function getClassName(isActive: boolean) {\n    return isActive ? \"quote-wrap active\" : \"quote-wrap\";\n  }\n\n  return (\n    <div className={getClassName(active)}>\n      <div className=\"quote-slider\">\n        {content.map((item: any, key: any) => {\n          return (\n            <span key={key} className=\"quote-item\">\n              {item}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","export default function ControlBtn({ buttonId, handleClick, status }: any) {\n  let btnClass = \"controlWrap \",\n    icoClass = \"fas fa-volume-\";\n  if (buttonId === \"mute\") {\n    btnClass += \"mRight\";\n    icoClass += \"mute\";\n  } else {\n    btnClass += \"mLeft\";\n    icoClass += \"up\";\n  }\n\n  if (typeof status === \"boolean\" && status) btnClass += \" active\";\n\n  return (\n    <button\n      id={buttonId}\n      onClick={handleClick}\n      type=\"button\"\n      className={btnClass}\n    >\n      <i className={icoClass}></i>\n    </button>\n  );\n}\n","export default function Header() {\n  return (\n    <header className=\"Header\">\n      <div className=\"header-wrap\">\n        <div className=\"logo-text\">\n          <img src=\"parrot.svg\" alt=\"logo\" />\n          Talk<span>To</span>Me<small>Beta</small>\n        </div>\n      </div>\n    </header>\n  );\n}\n","//TODO: import LangsOverlay from \"./components/LangsOverlay\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"Footer\">\n      <div className=\"copyrights\">\n        <span>Murad Rustamov © 2020</span>\n      </div>\n\n      {/*TODO: <LangsOverlay /> */}\n    </footer>\n  );\n}\n","import Youtube from \"react-youtube\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Player({ playerState }: any) {\n  const [opts] = useState<Object>({\n    height: \"390\",\n    width: \"640\",\n    playerVars: {\n      start: 45,\n      loop: 1,\n    },\n  });\n  const [player, setPlayer] = useState<any>(null);\n\n  const onReady = (e: any) => {\n    setPlayer(e.target);\n  };\n\n  useEffect(() => {\n    if (player !== null) {\n      if (playerState) {\n        player.playVideo();\n        player.unMute();\n      } else {\n        player.mute();\n      }\n    }\n  }, [player, playerState]);\n\n  return <Youtube videoId=\"L786lbUnZIY\" opts={opts} onReady={onReady} />;\n}\n","export default function UseHeadphones() {\n  return (\n    <span className=\"user-headset\">\n      <span className=\"lang-text\" data-lang=\"headphones_recommended\">\n        Headphones recommended &nbsp;\n      </span>\n      <i className=\"fas fa-headphones\"></i>\n    </span>\n  );\n}\n","export default function MotivateBtn({ handleClick, loading }: any) {\n  function getClassMotivate(loading: boolean) {\n    return loading ? \"motivate-btn hidden\" : \"motivate-btn\";\n  }\n\n  return (\n    <button\n      id=\"#motivate\"\n      type=\"button\"\n      onClick={handleClick}\n      className={getClassMotivate(loading)}\n    >\n      Motivate Me\n    </button>\n  );\n}\n","export default function Preloader({ loading }: any) {\n  function getClassLoading(loading: boolean) {\n    return loading ? \"loading active\" : \"loading\";\n  }\n\n  return (\n    <div className={getClassLoading(loading)}>\n      <div className=\"gooey\">\n        <span className=\"credits\" hidden>\n          Credit: https://dribbble.com/shots/5092176-Newton-Loader\n        </span>\n        <span className=\"dot\"></span>\n        <div className=\"dots\">\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport \"./sass/style.sass\";\n\n// Alphabetic sorted\nimport Quote from \"./components/Quote\";\nimport ControlBtn from \"./components/ControlBtn\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Player from \"./components/Player\";\nimport UseHeadphones from \"./components/UseHeadphones\";\nimport MotivateBtn from \"./components/MotivateBtn\";\nimport Preloader from \"./components/Preloader\";\n\nexport default function App() {\n  const [muted, setMuted] = useState<boolean>(false);\n  const [showAnswer, setShowAnswer] = useState<boolean>(false);\n  const [playing, setPlayingState] = useState<boolean>(false);\n\n  const [quotes] = useState<any>([\n    [\"Stay calm\", \"Take a deep breath\", \"Everithing is possible.\"],\n    [\"All our dreams can come true\", \"If we have the courage to pursue them.\"],\n    [\n      \"You’ve gotta dance like there’s nobody watching\",\n      \"Love like you’ll never be hurt\",\n      \"Sing like there’s nobody listening\",\n      \"and live like it’s heaven on earth.\",\n    ],\n    [\"It’s not the load that breaks you down\", \"it’s the way you carry it.\"],\n    [\"The hard days are what make you stronger.\"],\n    [\n      \"Don’t be pushed around by the fears in your mind\",\n      \"Be led by the dreams in your heart.\",\n    ],\n    [\"Keep your eyes on the stars\", \"and your feet on the ground.\"],\n    [\"If opportunity doesn’t knock\", \"build a door.\"],\n    [\n      \"The only difference\",\n      \"between ordinary and extraordinary\",\n      \"is that little extra.\",\n    ],\n    [\"If you cannot do great things\", \"do small things in a great way.\"],\n    [\"H.O.P.E.\", \"means\", \"Hold On. Pain Ends.\"],\n    [\"Don’t dream about success\", \"Get out there and work for it.\"],\n    [\"Make your fear of losing your greatest motivator.\"],\n    [\"It might not be easy\", \"but it’ll be worth it.\"],\n    [\"Don’t stop when you are tired\", \"Stop when you are done.\"],\n  ]);\n\n  const [currentQuote, setCurrentQuote] = useState<any>([]);\n\n  useEffect(() => {\n    if (currentQuote.length === 0)\n      setCurrentQuote(quotes[getRandomInt(quotes.length - 1)]);\n  }, [currentQuote, quotes]);\n\n  useEffect(() => {\n    let time = 4, // 2sec first delay, 4sec each next, and 2 additional for smothiness\n      timeout1: any;\n    if (showAnswer) {\n      for (let i = 1; i <= currentQuote.length; ++i) time += 4 * i;\n\n      timeout1 = setTimeout(() => {\n        setShowAnswer(false);\n        setCurrentQuote([]);\n        // TODO: settle Animation transition of quote hiding\n      }, (time + 2) * 1000);\n    }\n\n    return () => clearTimeout(timeout1);\n  }, [showAnswer, currentQuote]);\n\n  function getClassFormWrap(active: boolean) {\n    return active ? \"form-wrap active\" : \"form-wrap\";\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"wrapper\">\n        {/* TODO: Make dinamic */}\n        <Quote active={showAnswer} content={currentQuote} />\n        <div className={getClassFormWrap(showAnswer)}>\n          <div className=\"motivate-wrap\">\n            <MotivateBtn\n              handleClick={() => {\n                setShowAnswer(true);\n                if (!playing && !muted) setPlayingState(!playing);\n              }}\n              loading={showAnswer}\n            />\n            <Preloader loading={showAnswer} />\n          </div>\n\n          <ControlBtn\n            handleClick={() => {\n              setPlayingState(!playing);\n              setMuted(!muted);\n            }}\n            buttonId=\"mute\"\n            status={playing}\n          />\n          <ControlBtn\n            handleClick={() => {\n              setPlayingState(!playing);\n              setMuted(!muted);\n            }}\n            buttonId=\"play\"\n            status={!playing}\n          />\n\n          <UseHeadphones />\n        </div>\n        <Player playerState={playing} />\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n\nfunction getRandomInt(max: number) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}